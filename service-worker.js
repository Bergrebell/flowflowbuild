"use strict";var precacheConfig=[["/index.html","950091ceb0aafdaea31d212d39b70064"],["/static/css/main.a5bba514.css","026f8d6d826e3a4fd76338034f899c46"],["/static/js/main.a71faf9f.js","661bb9896deae6394c66c6b80ea61cfc"],["/static/media/Rounded_Elegance.21c892a7.ttf","21c892a7f38e340a2c73f61f1bb86c34"],["/static/media/Wind-Link.951e5e97.svg","951e5e97caeedade2860f8cd04c28d86"],["/static/media/back.6919008d.svg","6919008d9cf2e96980478514c16f55d8"],["/static/media/cloud-sun.44f34858.svg","44f348580eeacf6bd4d17c0909e0141d"],["/static/media/cloud.85e55200.svg","85e552003fdc20f0815ed48a10413bcc"],["/static/media/discharges.b7008fb3.svg","b7008fb372a77402c6e2b5d7a731d2aa"],["/static/media/fish1.3c0154ca.svg","3c0154cac4c3f33901fe9757e7bc2e9f"],["/static/media/flowflow_logo_small.7188904a.png","7188904a8a82ba476ca1e238e774359f"],["/static/media/level_old.2aeacadd.svg","2aeacaddb04a5a23d8a382ae95433f64"],["/static/media/levels.aaba2bac.svg","aaba2bac316bcb14ac5a6d2f8af94b55"],["/static/media/rain.1aacfeed.svg","1aacfeed54b743c6176ab06d7c3b3b50"],["/static/media/sealevels.aaba2bac.svg","aaba2bac316bcb14ac5a6d2f8af94b55"],["/static/media/search.36dcdef0.svg","36dcdef06d0c46e044e76cb7d86af8bb"],["/static/media/star-empty.27ef9094.svg","27ef9094548b75950b484553b3854352"],["/static/media/star.02578be4.svg","02578be4de6ea18ce68b509677de0327"],["/static/media/sun.55452c53.svg","55452c537ca67a9dca51a76334c152c4"],["/static/media/sun_cloud.b07e7254.svg","b07e7254318aed4f37c92ce7a68a7494"],["/static/media/temperatures.9e07464a.svg","9e07464a21e6a1ec1a7f9696eb14b4bd"],["/static/media/wheater.951e5e97.svg","951e5e97caeedade2860f8cd04c28d86"],["/static/media/x.64ade499.svg","64ade499913c6512aae9b5a25d0807b2"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});